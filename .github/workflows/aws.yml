name: Deploy to Amazon ECS

on:
  push:
    branches:
      - master
  release:
    types:
      - created

jobs:
  deploy:
    name: Deploy Ruby Judge Server to ECS
    runs-on: ubuntu-latest
    environment: production

    steps:
      # Display current working directory
      - name: Display Current Directory
        run: |
          pwd
          ls -la

      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Install Docker Compose
      - name: Install Docker Compose
        run: |
          sudo apt update
          sudo apt install docker-compose -y

      # Set up Ruby
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7'

      # Install Ruby dependencies
      - name: Install Ruby Dependencies
        run: bundle install --deployment --without development test

      # Configure AWS credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Login to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # Build and Push judgeserver Image
      - name: Build and Push judgeserver Image
        id: build-judgeserver
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: vss-images
          IMAGE_TAG: vcp-judgeserver-img-${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile.judgeserver .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      # Build and Push auto-vcp-judgeserver-nginx Image
      - name: Build and Push auto-vcp-judgeserver-nginx Image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: vss-images
          IMAGE_TAG: vcp-judgeserver-auto-nginx-img-${{ github.sha }}
        run: |
          cd nginx
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

